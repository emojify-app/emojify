// Code generated by protoc-gen-go. DO NOT EDIT.
// source: emojify.proto

package emojify

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HealthCheckResponse_ServingStatus int32

const (
	HealthCheckResponse_UNKNOWN     HealthCheckResponse_ServingStatus = 0
	HealthCheckResponse_SERVING     HealthCheckResponse_ServingStatus = 1
	HealthCheckResponse_NOT_SERVING HealthCheckResponse_ServingStatus = 2
)

var HealthCheckResponse_ServingStatus_name = map[int32]string{
	0: "UNKNOWN",
	1: "SERVING",
	2: "NOT_SERVING",
}
var HealthCheckResponse_ServingStatus_value = map[string]int32{
	"UNKNOWN":     0,
	"SERVING":     1,
	"NOT_SERVING": 2,
}

func (x HealthCheckResponse_ServingStatus) String() string {
	return proto.EnumName(HealthCheckResponse_ServingStatus_name, int32(x))
}
func (HealthCheckResponse_ServingStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_emojify_d01d917a98190ae5, []int{1, 0}
}

type QueryStatus_QueryStatus int32

const (
	QueryStatus_UNKNOWN  QueryStatus_QueryStatus = 0
	QueryStatus_QUEUED   QueryStatus_QueryStatus = 1
	QueryStatus_FINISHED QueryStatus_QueryStatus = 2
)

var QueryStatus_QueryStatus_name = map[int32]string{
	0: "UNKNOWN",
	1: "QUEUED",
	2: "FINISHED",
}
var QueryStatus_QueryStatus_value = map[string]int32{
	"UNKNOWN":  0,
	"QUEUED":   1,
	"FINISHED": 2,
}

func (x QueryStatus_QueryStatus) String() string {
	return proto.EnumName(QueryStatus_QueryStatus_name, int32(x))
}
func (QueryStatus_QueryStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_emojify_d01d917a98190ae5, []int{2, 0}
}

type HealthCheckRequest struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthCheckRequest) Reset()         { *m = HealthCheckRequest{} }
func (m *HealthCheckRequest) String() string { return proto.CompactTextString(m) }
func (*HealthCheckRequest) ProtoMessage()    {}
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_emojify_d01d917a98190ae5, []int{0}
}
func (m *HealthCheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheckRequest.Unmarshal(m, b)
}
func (m *HealthCheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheckRequest.Marshal(b, m, deterministic)
}
func (dst *HealthCheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheckRequest.Merge(dst, src)
}
func (m *HealthCheckRequest) XXX_Size() int {
	return xxx_messageInfo_HealthCheckRequest.Size(m)
}
func (m *HealthCheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheckRequest proto.InternalMessageInfo

func (m *HealthCheckRequest) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

type HealthCheckResponse struct {
	Status               HealthCheckResponse_ServingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=emojify.HealthCheckResponse_ServingStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *HealthCheckResponse) Reset()         { *m = HealthCheckResponse{} }
func (m *HealthCheckResponse) String() string { return proto.CompactTextString(m) }
func (*HealthCheckResponse) ProtoMessage()    {}
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_emojify_d01d917a98190ae5, []int{1}
}
func (m *HealthCheckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheckResponse.Unmarshal(m, b)
}
func (m *HealthCheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheckResponse.Marshal(b, m, deterministic)
}
func (dst *HealthCheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheckResponse.Merge(dst, src)
}
func (m *HealthCheckResponse) XXX_Size() int {
	return xxx_messageInfo_HealthCheckResponse.Size(m)
}
func (m *HealthCheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheckResponse proto.InternalMessageInfo

func (m *HealthCheckResponse) GetStatus() HealthCheckResponse_ServingStatus {
	if m != nil {
		return m.Status
	}
	return HealthCheckResponse_UNKNOWN
}

type QueryStatus struct {
	Status               QueryStatus_QueryStatus `protobuf:"varint,1,opt,name=status,proto3,enum=emojify.QueryStatus_QueryStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *QueryStatus) Reset()         { *m = QueryStatus{} }
func (m *QueryStatus) String() string { return proto.CompactTextString(m) }
func (*QueryStatus) ProtoMessage()    {}
func (*QueryStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_emojify_d01d917a98190ae5, []int{2}
}
func (m *QueryStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryStatus.Unmarshal(m, b)
}
func (m *QueryStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryStatus.Marshal(b, m, deterministic)
}
func (dst *QueryStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryStatus.Merge(dst, src)
}
func (m *QueryStatus) XXX_Size() int {
	return xxx_messageInfo_QueryStatus.Size(m)
}
func (m *QueryStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryStatus.DiscardUnknown(m)
}

var xxx_messageInfo_QueryStatus proto.InternalMessageInfo

func (m *QueryStatus) GetStatus() QueryStatus_QueryStatus {
	if m != nil {
		return m.Status
	}
	return QueryStatus_UNKNOWN
}

type QueryItem struct {
	Id                   string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	QueuePosition        int32        `protobuf:"varint,2,opt,name=queuePosition,proto3" json:"queuePosition,omitempty"`
	QueueLength          int32        `protobuf:"varint,3,opt,name=queueLength,proto3" json:"queueLength,omitempty"`
	Status               *QueryStatus `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *QueryItem) Reset()         { *m = QueryItem{} }
func (m *QueryItem) String() string { return proto.CompactTextString(m) }
func (*QueryItem) ProtoMessage()    {}
func (*QueryItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_emojify_d01d917a98190ae5, []int{3}
}
func (m *QueryItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryItem.Unmarshal(m, b)
}
func (m *QueryItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryItem.Marshal(b, m, deterministic)
}
func (dst *QueryItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryItem.Merge(dst, src)
}
func (m *QueryItem) XXX_Size() int {
	return xxx_messageInfo_QueryItem.Size(m)
}
func (m *QueryItem) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryItem.DiscardUnknown(m)
}

var xxx_messageInfo_QueryItem proto.InternalMessageInfo

func (m *QueryItem) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *QueryItem) GetQueuePosition() int32 {
	if m != nil {
		return m.QueuePosition
	}
	return 0
}

func (m *QueryItem) GetQueueLength() int32 {
	if m != nil {
		return m.QueueLength
	}
	return 0
}

func (m *QueryItem) GetStatus() *QueryStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterType((*HealthCheckRequest)(nil), "emojify.HealthCheckRequest")
	proto.RegisterType((*HealthCheckResponse)(nil), "emojify.HealthCheckResponse")
	proto.RegisterType((*QueryStatus)(nil), "emojify.QueryStatus")
	proto.RegisterType((*QueryItem)(nil), "emojify.QueryItem")
	proto.RegisterEnum("emojify.HealthCheckResponse_ServingStatus", HealthCheckResponse_ServingStatus_name, HealthCheckResponse_ServingStatus_value)
	proto.RegisterEnum("emojify.QueryStatus_QueryStatus", QueryStatus_QueryStatus_name, QueryStatus_QueryStatus_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EmojifyClient is the client API for Emojify service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EmojifyClient interface {
	Check(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error)
	Create(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (*QueryItem, error)
	Query(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (*QueryItem, error)
}

type emojifyClient struct {
	cc *grpc.ClientConn
}

func NewEmojifyClient(cc *grpc.ClientConn) EmojifyClient {
	return &emojifyClient{cc}
}

func (c *emojifyClient) Check(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error) {
	out := new(HealthCheckResponse)
	err := c.cc.Invoke(ctx, "/emojify.Emojify/Check", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *emojifyClient) Create(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (*QueryItem, error) {
	out := new(QueryItem)
	err := c.cc.Invoke(ctx, "/emojify.Emojify/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *emojifyClient) Query(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (*QueryItem, error) {
	out := new(QueryItem)
	err := c.cc.Invoke(ctx, "/emojify.Emojify/Query", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EmojifyServer is the server API for Emojify service.
type EmojifyServer interface {
	Check(context.Context, *HealthCheckRequest) (*HealthCheckResponse, error)
	Create(context.Context, *wrappers.StringValue) (*QueryItem, error)
	Query(context.Context, *wrappers.StringValue) (*QueryItem, error)
}

func RegisterEmojifyServer(s *grpc.Server, srv EmojifyServer) {
	s.RegisterService(&_Emojify_serviceDesc, srv)
}

func _Emojify_Check_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmojifyServer).Check(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/emojify.Emojify/Check",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmojifyServer).Check(ctx, req.(*HealthCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Emojify_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrappers.StringValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmojifyServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/emojify.Emojify/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmojifyServer).Create(ctx, req.(*wrappers.StringValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _Emojify_Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrappers.StringValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmojifyServer).Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/emojify.Emojify/Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmojifyServer).Query(ctx, req.(*wrappers.StringValue))
	}
	return interceptor(ctx, in, info, handler)
}

var _Emojify_serviceDesc = grpc.ServiceDesc{
	ServiceName: "emojify.Emojify",
	HandlerType: (*EmojifyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Check",
			Handler:    _Emojify_Check_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _Emojify_Create_Handler,
		},
		{
			MethodName: "Query",
			Handler:    _Emojify_Query_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "emojify.proto",
}

func init() { proto.RegisterFile("emojify.proto", fileDescriptor_emojify_d01d917a98190ae5) }

var fileDescriptor_emojify_d01d917a98190ae5 = []byte{
	// 399 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x52, 0xc1, 0x6e, 0xd3, 0x40,
	0x14, 0xec, 0x1a, 0x62, 0xd3, 0x67, 0x52, 0xac, 0x07, 0x07, 0x2b, 0x54, 0xc8, 0xb2, 0x38, 0x44,
	0x08, 0xb9, 0x52, 0xe0, 0x80, 0x80, 0x53, 0x5b, 0x43, 0x2d, 0x90, 0x4b, 0x6d, 0x12, 0x8e, 0xc8,
	0x49, 0x5e, 0x1c, 0x43, 0xe2, 0x75, 0xbc, 0x6b, 0x50, 0x0e, 0x7c, 0x04, 0x07, 0xfe, 0x89, 0xcf,
	0x42, 0xd9, 0xd8, 0x51, 0x8c, 0x22, 0x0e, 0xdc, 0x76, 0x66, 0x67, 0x56, 0xf3, 0x76, 0x1e, 0x74,
	0x69, 0xc9, 0xbf, 0x64, 0xb3, 0xb5, 0x57, 0x94, 0x5c, 0x72, 0x34, 0x6a, 0xd8, 0x7b, 0x94, 0x72,
	0x9e, 0x2e, 0xe8, 0x4c, 0xd1, 0xe3, 0x6a, 0x76, 0xf6, 0xbd, 0x4c, 0x8a, 0x82, 0x4a, 0xb1, 0x15,
	0xba, 0x1e, 0xe0, 0x15, 0x25, 0x0b, 0x39, 0xbf, 0x98, 0xd3, 0xe4, 0x6b, 0x44, 0xab, 0x8a, 0x84,
	0x44, 0x1b, 0x0c, 0x41, 0xe5, 0xb7, 0x6c, 0x42, 0x36, 0x73, 0x58, 0xff, 0x38, 0x6a, 0xa0, 0xfb,
	0x8b, 0xc1, 0xfd, 0x96, 0x41, 0x14, 0x3c, 0x17, 0x84, 0xe7, 0xa0, 0x0b, 0x99, 0xc8, 0x4a, 0x28,
	0xc3, 0xc9, 0xe0, 0x89, 0xd7, 0x04, 0x3a, 0xa0, 0xf6, 0xe2, 0xcd, 0x6b, 0x79, 0x1a, 0x2b, 0x47,
	0x54, 0x3b, 0xdd, 0x97, 0xd0, 0x6d, 0x5d, 0xa0, 0x09, 0xc6, 0x30, 0x7c, 0x17, 0x5e, 0x7f, 0x0a,
	0xad, 0xa3, 0x0d, 0x88, 0xfd, 0x68, 0x14, 0x84, 0x6f, 0x2d, 0x86, 0xf7, 0xc0, 0x0c, 0xaf, 0x3f,
	0x7e, 0x6e, 0x08, 0xcd, 0xfd, 0x01, 0xe6, 0x4d, 0x45, 0xe5, 0xba, 0x76, 0xbe, 0xf8, 0x2b, 0x8e,
	0xb3, 0x8b, 0xb3, 0xa7, 0xda, 0x3f, 0xef, 0x42, 0x3c, 0x6f, 0x3f, 0xd4, 0x8a, 0x00, 0xa0, 0xdf,
	0x0c, 0xfd, 0xa1, 0x7f, 0x69, 0x31, 0xbc, 0x0b, 0x77, 0xde, 0x04, 0x61, 0x10, 0x5f, 0xf9, 0x97,
	0x96, 0xe6, 0xfe, 0x64, 0x70, 0xac, 0x6c, 0x81, 0xa4, 0x25, 0x9e, 0x80, 0x96, 0x4d, 0xeb, 0x9f,
	0xd3, 0xb2, 0x29, 0x3e, 0x86, 0xee, 0xaa, 0xa2, 0x8a, 0x3e, 0x70, 0x91, 0xc9, 0x8c, 0xe7, 0xb6,
	0xe6, 0xb0, 0x7e, 0x27, 0x6a, 0x93, 0xe8, 0x80, 0xa9, 0x88, 0xf7, 0x94, 0xa7, 0x72, 0x6e, 0xdf,
	0x52, 0x9a, 0x7d, 0x0a, 0x9f, 0xee, 0xa6, 0xba, 0xed, 0xb0, 0xbe, 0x39, 0x78, 0x70, 0x68, 0xaa,
	0x66, 0x92, 0xc1, 0x6f, 0x06, 0x86, 0xbf, 0xbd, 0xc7, 0x73, 0xe8, 0xa8, 0x06, 0xf0, 0xe1, 0xe1,
	0x5e, 0x54, 0xed, 0xbd, 0xd3, 0x7f, 0x95, 0x86, 0xaf, 0x41, 0xbf, 0x28, 0x29, 0x91, 0x84, 0xa7,
	0xde, 0x76, 0xab, 0xbc, 0x66, 0xab, 0xbc, 0x58, 0x96, 0x59, 0x9e, 0x8e, 0x92, 0x45, 0x45, 0x3d,
	0x6c, 0xa7, 0xda, 0xfc, 0x88, 0x7b, 0x84, 0xaf, 0xa0, 0xa3, 0xe0, 0xff, 0x98, 0xc7, 0xba, 0xd2,
	0x3e, 0xfb, 0x13, 0x00, 0x00, 0xff, 0xff, 0xc1, 0x36, 0x6a, 0x3c, 0xe6, 0x02, 0x00, 0x00,
}
